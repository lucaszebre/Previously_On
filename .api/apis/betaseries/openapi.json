{
  "openapi": "3.0.0",
  "info": {
    "title": "BetaSeries API",
    "description": "BetaSeries API Documentation",
    "version": "3.0",
    "termsOfService": "https://www.betaseries.com/legal/terms",
    "contact": {
      "name": "BetaSeries",
      "url": "https://www.betaseries.com",
      "email": "support@betaseries.com"
    },
    "license": {
      "name": "MIT",
      "url": "\thttps://choosealicense.com/licenses/mit/"
    }
  },
  "servers": [
    {
      "url": "https://api.betaseries.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BetaSeriesApiKey": {
        "type": "apiKey",
        "name": "X-BetaSeries-Key",
        "in": "header"
      },
      "BetaSeriesToken": {
        "type": "apiKey",
        "name": "X-BetaSeries-Token",
        "in": "header"
      }
    },
    "parameters": {
      "LocaleParam": {
        "name": "locale",
        "in": "query",
        "description": "Locale parameter to specify language preference",
        "required": false,
        "schema": {
          "type": "string",
          "default": "fr"
        }
      }
    }
  },
  "security": [
    {
      "BetaSeriesApiKey": []
    }
  ],
  "paths": {
    "/badges/badge": {
      "get": {
        "tags": [
          "Badges"
        ],
        "operationId": "get-badges-badge",
        "summary": "Returns badge details",
        "description": "Returns a badge details.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Badge ID. You can add more than one by separating them with a comma.",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID of the user who earned the badge(s).",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/collections/collection": {
      "get": {
        "tags": [
          "Collections"
        ],
        "operationId": "get-collections-collection",
        "summary": "Display collection's data",
        "description": "Display collection's data.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the collection to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "operationId": "delete-collections-collection",
        "summary": "Delete a collection from the identified user [Premium feature]",
        "description": "Deletes a collection from the identified user. [Premium feature]",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the collection",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "operationId": "post-collections-collection",
        "summary": "Create/Update a collection for the identified user [Premium feature]",
        "description": "Create/Update a collection for the identified user. [Premium feature]",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the collection to update (Mandatory for updating)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the collection (Mandatory for creation)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the collection (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "private",
            "in": "query",
            "description": "Indicates if the collection if private (Optional, possibles values : '1' (for private) or '0' (for public, default value when creation))",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "items",
            "in": "query",
            "description": "List of shows/movies for the collection (Mandatory for creation, Optional for edition. Must be a JSON array with format : [{\"type\": \"show\", \"id\": 123, \"note\": \"Note about series\"}, {\"type\": \"movie\", \"id\": 456, \"note\": null}])",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/collections/list": {
      "get": {
        "tags": [
          "Collections"
        ],
        "operationId": "get-collections-list",
        "summary": "Display the list of all collections of the member",
        "description": "Display the list of all collections of the member.",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "Member's ID (optional, default identified member)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/comments/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "get-comments-comments",
        "summary": "Get comments",
        "description": "Retrieves comments for a given element.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Element type: episode|show|member|movie|poll|article",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the element in question",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of comments per page",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since_id",
            "in": "query",
            "description": "ID of the last comment received (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "null"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Chronological return order, desc or asc (Default asc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "replies",
            "in": "query",
            "description": "Include replies to comments (1 or 0, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/comments/comment": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "get-comments-comment",
        "summary": "Retrieve a given comment",
        "description": "Retrieves a given comment.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "post-comments-comment",
        "summary": "Create or edit a comment for the specified item",
        "description": "Creates or edits a comment for the specified item.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of item: episode|show|member|movie|event|poll|article (Mandatory for creation, or reference)",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the item in question (Mandatory for creation, or reference)",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "Reference ID of the item in question (Mandatory for creation, or type + id)",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "in_reply_to",
            "in": "query",
            "description": "If a reply, inner_id of the corresponding comment (Optional for creation)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Text of the comment",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "edit_id",
            "in": "query",
            "description": "ID of the comment to edit (Mandatory for editing)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "operationId": "delete-comments-comment",
        "summary": "Delete a comment from the identified user",
        "description": "Deletes a comment from the identified user.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/comments/replies": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "get-comments-replies",
        "summary": "Retrieve the replies of a given comment",
        "description": "Retrieves the replies of a given comment.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Chronological return order, desc or asc (Default asc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/comments/comment_event": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "post-comments-comment-event",
        "summary": "Create a comment for an event",
        "description": "Creates a comment for an event.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the event: film_add|markas.... (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "element_id",
            "in": "query",
            "description": "ID of the element involved in the event (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the event to comment on (Optional if type + element_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Text of the comment",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/comments/subscription": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "post-comments-subscription",
        "summary": "Subscribe the member to email notifications for the given item",
        "description": "Subscribes the member to email notifications for the given item.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of item: episode|show|member|movie",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the item in question",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "operationId": "delete-comments-subscription",
        "summary": "Unsubscribe the member from email notifications for the given item",
        "description": "Unsubscribes the member from email notifications for the given item.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of item: episode|show|member|movie",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the item in question",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/comments/thumb": {
      "post": {
        "tags": [
          "Comments"
        ],
        "operationId": "post-comments-thumb",
        "summary": "Add a vote for the user for the given comment",
        "description": "Adds a vote for the user for the given comment.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of the vote (-1 for a downvote, 1 for an upvote)",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "switch",
            "in": "query",
            "description": "Whether the user switches their existing vote (default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "operationId": "delete-comments-thumb",
        "summary": "Remove the user's vote for the given comment",
        "description": "Removes the user's vote for the given comment.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/comments/status": {
      "get": {
        "tags": [
          "Comments"
        ],
        "operationId": "get-comments-status",
        "summary": "Retrieve the status of comments on the given item (closed or open)",
        "description": "Retrieves the status of comments on the given item (closed or open).",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of item: episode|show|member|movie",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the item in question",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/episodes/note": {
      "post": {
        "tags": [
          "Episodes"
        ],
        "operationId": "post-episodes-note",
        "summary": "Rate an episode",
        "description": "Rate an episode with a score from 1 to 5.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Rating from 1 to 5",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Episodes"
        ],
        "operationId": "delete-episodes-note",
        "summary": "Remove a rating",
        "description": "Delete an episode's rating.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/list": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-list",
        "summary": "Retrieve the list of episodes to watch.",
        "description": "Fetch the list of episodes to watch, with various filters and pagination options.",
        "parameters": [
          {
            "name": "subtitles",
            "in": "query",
            "description": "Display episodes with specific subtitles available: all|vovf|vo|vf (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit to a number of episodes per series (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "showsLimit",
            "in": "query",
            "description": "Limit to a number of series (Optional, default 50)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for series pagination (Optional, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "showId",
            "in": "query",
            "description": "Series ID (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "showTheTVDBId",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "showIMDBId",
            "in": "query",
            "description": "Series ID on IMDB (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Member's ID (Optional, default identified member)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "specials",
            "in": "query",
            "description": "Include special episodes in the return (Optional, default not returned)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "released",
            "in": "query",
            "description": "If 1, displays only released episodes, 2 for upcoming, 0 for both (Optional, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of episode appearance, \"account\" for account order, \"smart\" for current viewing order (Optional, default account)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Timestamp to mark episodes released after this date (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excludes",
            "in": "query",
            "description": "If specified, removes certain blocks from the return: characters (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "List of platform IDs where the episodes must be available (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/downloaded": {
      "post": {
        "tags": [
          "Episodes"
        ],
        "operationId": "post-episodes-downloaded",
        "summary": "Mark an episode as downloaded",
        "description": "Indicate an episode has been downloaded.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Episodes"
        ],
        "operationId": "delete-episodes-downloaded",
        "summary": "Remove the downloaded mark",
        "description": "Unmark an episode as downloaded.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/watched": {
      "post": {
        "tags": [
          "Episodes"
        ],
        "operationId": "post-episodes-watched",
        "summary": "Mark an episode as watched",
        "description": "Mark one or more episodes as watched, with options to specify multiple episodes, bulk marking, and deletion of future episode marks.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "youtube_id",
            "in": "query",
            "description": "Episode ID on YouTube (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "bulk",
            "in": "query",
            "description": "If specified, all previous episodes will also be marked as watched (default true)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "delete",
            "in": "query",
            "description": "If specified, all subsequent episodes will no longer be marked as watched",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "If a rating between 1 and 5 is specified, rate the episode",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Episodes"
        ],
        "operationId": "delete-episodes-watched",
        "summary": "Unmark an episode as watched",
        "description": "Remove the watched mark from one or more episodes, allowing for multiple episodes to be specified.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/display": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-display",
        "summary": "Display information of an episode",
        "description": "Show details of one or more episodes, allowing for multiple IDs and various information sources.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Episode ID. Multiple IDs can be specified separated by a comma (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Episode ID on TheTVDB. Multiple IDs can be specified separated by a comma (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "youtube_id",
            "in": "query",
            "description": "Episode ID on YouTube. Multiple IDs can be specified separated by a comma (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "subtitles",
            "in": "query",
            "description": "Display subtitles if specified (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/episodes/scraper": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-scraper",
        "summary": "Retrieve episode information",
        "description": "Fetch episode details from a given file name.",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "File name to process",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/search": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-search",
        "summary": "Retrieve episode information",
        "description": "Fetch episode details based on series ID, URL, episode number, or subtitles.",
        "parameters": [
          {
            "name": "show_id",
            "in": "query",
            "description": "Series ID for the episode to search",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the series to search (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "Episode number, either SxxExx or the global number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "subtitles",
            "in": "query",
            "description": "If specified, returns subtitles for episodes",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/latest": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-latest",
        "summary": "Retrieve the latest aired episode",
        "description": "Fetch the most recently aired episode of a specific series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID. Multiple IDs can be separated by a comma (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB. Multiple IDs can be separated by a comma (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "specials",
            "in": "query",
            "description": "Include special episodes (default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/next": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-next",
        "summary": "Retrieve the next episode",
        "description": "Fetch the upcoming episode of a specific series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID. Multiple IDs can be separated by a comma (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB. Multiple IDs can be separated by a comma (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "specials",
            "in": "query",
            "description": "Include special episodes (default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/hidden": {
      "post": {
        "tags": [
          "Episodes"
        ],
        "operationId": "post-episodes-hidden",
        "summary": "Mark an episode as not to watch",
        "description": "Indicate an episode or multiple episodes as not to be watched.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Identifier of the episode to mark. Multiple IDs can be separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Episodes"
        ],
        "operationId": "delete-episodes-hidden",
        "summary": "Remove an episode from the hidden list",
        "description": "Unmark an episode or multiple episodes from being hidden.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Identifier of the episode to remove. Multiple IDs can be separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/episodes/unrated": {
      "get": {
        "tags": [
          "Episodes"
        ],
        "operationId": "get-episodes-unrated",
        "summary": "Retrieve the list of watched and unrated episodes",
        "description": "Fetch the list of episodes that have been watched but not yet rated.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of results per page, default 20",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Time limit, yesterday for episodes watched yesterday, all for all watched episodes (Optional, default yesterday)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/friends/list": {
      "get": {
        "tags": [
          "Friends"
        ],
        "operationId": "get-friends-list",
        "summary": "Retrieves friends List",
        "description": "Retrieves the list of friends of the member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID, optional, if not specified uses the identified member. If specified, blocked=false.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "description": "If specified, returns the list of blocked people",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Returns the last action of friends (Default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit on the number of friends to display (optional, default all friends are returned)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/friends/requests": {
      "get": {
        "tags": [
          "Friends"
        ],
        "operationId": "get-friends-requests",
        "summary": "Retrieves sent requests",
        "description": "Retrieves the list of requests sent by the user.",
        "parameters": [
          {
            "name": "received",
            "in": "query",
            "description": "If specified, returns the list of received requests",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/friends/friend": {
      "post": {
        "tags": [
          "Friends"
        ],
        "operationId": "post-friends-friend",
        "summary": "Adds a friend",
        "description": "Adds a friend to the user's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID to add as a friend",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Friends"
        ],
        "operationId": "delete-friends-friend",
        "summary": "Removes a friend",
        "description": "Removes a friend from the user's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID to remove",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/friends/block": {
      "post": {
        "tags": [
          "Friends"
        ],
        "operationId": "post-friends-block",
        "summary": "Blocks a user",
        "description": "Blocks a user.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID to block",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Friends"
        ],
        "operationId": "delete-friends-block",
        "summary": "Unblocks a user",
        "description": "Unblocks a user.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID to unblock",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/profile-filters/filter": {
      "delete": {
        "tags": [
          "Members"
        ],
        "operationId": "delete-profile-filters-filter",
        "summary": "Deletes filter",
        "description": "Deletes the filter for the connected member for the type of media.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of media (show or movie)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/options": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-options",
        "summary": "Retrieves member options",
        "description": "Retrieves member options (subtitles).",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/auth": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-auth",
        "summary": "Standard member authentication",
        "description": "Standard member authentication.",
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "Identifier (login or e-mail)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "MD5 encrypted password",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/oauth": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-oauth",
        "summary": "OAuth Authentication",
        "description": "OAuth authentication. Redirects the user to the callback URL specified in your account with the GET parameter token.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/access_token": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-access-token",
        "summary": "OAuth2 Access Token",
        "description": "Retrieves an access token with the code provided by OAuth 2 authentication.",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Your API key.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "The secret key provided in your key information.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "The callback address you had already provided for the first part.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Code obtained from the first part of authentication.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/infos": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-infos",
        "summary": "Returns member information",
        "description": "Returns information of a member, defaulting to the identified member. Use movies/member to retrieve movies and shows/member for series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/username": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-username",
        "summary": "Returns available usernames",
        "description": "Returns available username options on BetaSeries.",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Username",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/option": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-option",
        "summary": "Modifies user option",
        "description": "Modifies a user option.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Option name (downloaded, global, specials, notation, timelag, friendship, comment_language)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Option value (1 or 0, for friendship: open|requests|friends|nobody, for episodes_tri: name, date, empty, for comment_language: all, site_locale and locale available on Betaseries)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/is_active": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-is-active",
        "summary": "Checks token activity",
        "description": "Checks if the token is active.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/destroy": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-destroy",
        "summary": "Destroys active token",
        "description": "Destroys the active token.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/badges": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-badges",
        "summary": "Displays member badges",
        "description": "Displays member badges.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/notifications": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-notifications",
        "summary": "Displays latest notifications",
        "description": "Displays the latest member notifications. Types: badge, banner, bugs, character, comment, donations, episode, facebook, film, forum, friend, message, quiz, recommend, site, subtitles, video.",
        "parameters": [
          {
            "name": "since_id",
            "in": "query",
            "description": "Last ID (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "Number of notifications, maximum 100 (Optional, default 10)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Descending or ascending sort (ASC or DESC, default DESC)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Return only certain types separated by a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "all",
            "in": "query",
            "description": "Display all notifications, not just unread ones (Optional, default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "auto_delete",
            "in": "query",
            "description": "Automatic deletion of notifications (Optional, default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "auto_mark",
            "in": "query",
            "description": "Automatic marking of notifications as seen (Optional, default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/notification": {
      "delete": {
        "tags": [
          "Members"
        ],
        "operationId": "delete-members-notification",
        "summary": "Deletes a notification",
        "description": "Deletes a notification.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Notification ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/signup": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-signup",
        "summary": "Creates new member account",
        "description": "Creates a new member account on BetaSeries.",
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "Username",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "MD5 password — Optional: If not provided, it will be generated and sent in the email",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email address",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/search": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-search",
        "summary": "Member search",
        "description": "Searches for members.",
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "Username, minimum 2 characters. You can use % as a wildcard.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return. Default 10.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/sync": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-sync",
        "summary": "Searches members among friends",
        "description": "Searches members among the account's friends.",
        "parameters": [
          {
            "name": "mails[]",
            "in": "query",
            "description": "POST array of email addresses to search",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/lost": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-lost",
        "summary": "Password reset email",
        "description": "Sends an email to reset the password.",
        "parameters": [
          {
            "name": "find",
            "in": "query",
            "description": "Email address or username",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/avatar": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-avatar",
        "summary": "Uploads and replaces user avatar",
        "description": "Uploads and replaces the identified user's avatar.",
        "parameters": [
          {
            "name": "avatar",
            "in": "query",
            "description": "Image to be used for the user's avatar.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "operationId": "delete-members-avatar",
        "summary": "Deletes user avatar",
        "description": "Deletes the identified user's avatar.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/banner": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-banner",
        "summary": "Uploads user banner",
        "description": "Uploads and replaces the identified user's banner.",
        "parameters": [
          {
            "name": "avatar",
            "in": "query",
            "description": "Image to be used for the user's banner.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "operationId": "delete-members-banner",
        "summary": "Remove the banner",
        "description": "Delete the banner of the identified user.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/locale": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-locale",
        "summary": "Change the locale",
        "description": "Set a new locale for the identified member.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/email": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-email",
        "summary": "Retrieve the email address",
        "description": "Fetch the email address of the identified member.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-email",
        "summary": "Change the email address",
        "description": "Update the email address of the identified member.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The new email address",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/password": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-password",
        "summary": "Change the password",
        "description": "Update the password for the identified member.",
        "parameters": [
          {
            "name": "current_password",
            "in": "query",
            "description": "The current password of the member",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "new_password",
            "in": "query",
            "description": "The new password for the member",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "confirmed_password",
            "in": "query",
            "description": "The confirmation of the new password for the member",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/members/year": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "get-members-year",
        "summary": "Returns yearly member statistics",
        "description": "Returns the year's statistics of a member, defaulting to the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year for the statistics calculation",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/members/delete": {
      "post": {
        "tags": [
          "Members"
        ],
        "operationId": "post-members-delete",
        "summary": "Initiates account deletion process",
        "description": "Initiates the account deletion process (sends an email with a link for permanent deletion).",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/messages/inbox": {
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "get-messages-inbox",
        "summary": "Retrieve the member's inbox",
        "description": "Fetch the inbox of the identified member, paginated by 20 messages.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/messages/discussion": {
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "get-messages-discussion",
        "summary": "Retrieve a discussion",
        "description": "Fetch a discussion using the ID of its first message.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the first message of the discussion",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/messages/read": {
      "post": {
        "tags": [
          "Messages"
        ],
        "operationId": "post-messages-read",
        "summary": "Mark a message as read",
        "description": "Mark a specific message as read.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the message to mark as read",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/messages/message": {
      "delete": {
        "tags": [
          "Messages"
        ],
        "operationId": "delete-messages-message",
        "summary": "Delete a message",
        "description": "Delete a specific message. If it's the first in a discussion, the entire discussion is deleted.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the message to delete — if it's the first in a discussion, the whole discussion is deleted",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "operationId": "post-messages-message",
        "summary": "Send a message",
        "description": "Send a message to a fellow member of the site.",
        "parameters": [
          {
            "name": "to",
            "in": "query",
            "description": "ID of the recipient member (mandatory if first message)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "text",
            "in": "query",
            "description": "Text of the message",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of the message (mandatory if first message)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the first message in the discussion (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/movies/movie": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-movie",
        "summary": "Show movie details",
        "description": "Display the details of a movie from either its own ID, TheMovieDB ID, or IMDB ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tmdb_id",
            "in": "query",
            "description": "Movie ID on TheMovieDB",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "imdb_id",
            "in": "query",
            "description": "Movie ID on IMDB",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If `summary = true`, add some additional blocks to the return: user, notes, platforms separated by a comma (optional).",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "Movies"
        ],
        "operationId": "post-movies-movie",
        "summary": "Add or update a movie",
        "description": "Add or update the movie in the member's movie list.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "mail",
            "in": "query",
            "description": "Enable email alerts (0 or 1, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "twitter",
            "in": "query",
            "description": "Enable Twitter alerts (0 or 1, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "0 = to watch, 1 = watched, 2 = do not want to watch (default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "Display on profile (0 or 1, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Movie rating (optional, from 1 to 5)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "operationId": "delete-movies-movie",
        "summary": "Remove a movie",
        "description": "Delete a movie from the member's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/movies/list": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-list",
        "summary": "Display the list of all movies",
        "description": "Show the complete list of movies.",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for the movie list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of movies to display (optional, default 100, max 1000)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, popularity (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Display filter (optional, new=only movies not in the account)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "IDs of platforms where movies are available",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country for platforms",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/member": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-member",
        "summary": "Display all movies of a member",
        "description": "Show the complete list of movies of a member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member's ID (optional, default identified member)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "0 = to watch, 1 = watched, 2 = do not want to watch (default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "released",
            "in": "query",
            "description": "0 = unreleased movies, 1 = released movies, 2 = all (default 2)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for the movie list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of movies to display (maximum 1000) (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, popularity, added, release, svod (optional, default alphabetical)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential movie info (Default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Retrieve movies with tags separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excluded_tags",
            "in": "query",
            "description": "Exclude movies with tags separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If summary = true, add certain additional blocks to the return: user, notes, platforms separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "List of platform IDs where the movies must be available (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/random": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-random",
        "summary": "Display a random movie",
        "description": "Show a randomly selected movie.",
        "parameters": [
          {
            "name": "nb",
            "in": "query",
            "description": "Number of movies to display, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/search": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-search",
        "summary": "Search for a movie",
        "description": "Search for a movie based on various criteria.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Searched title (optional if order=popularity)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Return order (title|popularity), default title",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of results per page, default 5, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "recent",
            "in": "query",
            "description": "Only movies from the last two years (Default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/scraper": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-scraper",
        "summary": "Retrieve movie information",
        "description": "Get movie details by processing the given file name.",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "File name to process",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "Number of results to return (default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/movies/genres": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-genres",
        "summary": "Display all available genres",
        "description": "Show all available movie genres.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/note": {
      "post": {
        "tags": [
          "Movies"
        ],
        "operationId": "post-movies-note",
        "summary": "Rate a movie",
        "description": "Give a rating to a movie.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Rating from 1 to 5",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "operationId": "delete-movies-note",
        "summary": "Remove a movie rating",
        "description": "Delete a given rating from a movie.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/movies/similars": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-similars",
        "summary": "Retrieve similar movies",
        "description": "Show movies marked as similar by BetaSeries members.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "Return movie details (Default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/characters": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-characters",
        "summary": "Retrieve the cast of the movie.",
        "description": "Show the casting details of the movie.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/favorites": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-favorites",
        "summary": "Retrieve favorite movies",
        "description": "Show the favorite movies of a member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member ID, optional, if not specified uses the identified member.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for the movie list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit on the number of movies to display (maximum 1000) (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, popularity, added, release, svod (optional, default alphabetical)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential movie info (Default false)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If summary = true, add certain additional blocks to the return: user, notes, platforms separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/favorite": {
      "post": {
        "tags": [
          "Movies"
        ],
        "operationId": "post-movies-favorite",
        "summary": "Add a favorite movie",
        "description": "Add a favorite movie to the profile of the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the movie to add.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Movies"
        ],
        "operationId": "delete-movies-favorite",
        "summary": "Remove a favorite movie",
        "description": "Remove a favorite movie from the profile of the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the movie to remove.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/movies/upcoming": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-upcoming",
        "summary": "Display upcoming movies",
        "description": "Display the list of upcoming movies in theaters.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of movies (Optional, default 25)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Return order: release_date, popularity (Optional, default release_date)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/discover": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-discover",
        "summary": "Display movies to discover",
        "description": "Display the list of movies to discover.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of discovery: popular, upcoming",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit on the number of movies to display (optional, default 100, maximum 200)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the movie list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "Add some additional blocks to the return: platforms separated by a comma (optional).",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/movies/articles": {
      "get": {
        "tags": [
          "Movies"
        ],
        "operationId": "get-movies-articles",
        "summary": "Display blog articles about the movie",
        "description": "Display blog articles that talk about the movie.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Movie ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/news/last": {
      "get": {
        "tags": [
          "News"
        ],
        "operationId": "get-news-last",
        "summary": "Display the latest news",
        "description": "Display the latest news around series.",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of news, default 10",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tailored",
            "in": "query",
            "description": "Return news from series followed by the member",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/oauth/access_token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "post-oauth-access-token",
        "summary": "Retrieve an access token with the code provided by OAuth 2 authentication",
        "description": "Retrieves an access token with the code provided by OAuth 2 authentication.",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Your API key.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "The secret key provided in your key's details.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "The callback address you had previously specified for the first part.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Code obtained by the first part of the authentication.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/oauth/device": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "post-oauth-device",
        "summary": "Retrieve a code to present to the user for identification on a remote device (e.g., Television)",
        "description": "Retrieves a code to present to the user for identification on a remote device (e.g., Television).",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/persons/person": {
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "get-persons-person",
        "summary": "Display details of the actor",
        "description": "Display the details of the actor.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Person's ID.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/persons/articles": {
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "get-persons-articles",
        "summary": "Display news articles",
        "description": "Display news articles that talk about the person.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Person's ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/members": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-members",
        "summary": "Return a picture of the member",
        "description": "Returns a picture of the member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the member",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "placeholder",
            "in": "query",
            "description": "Type of format if no photo is mentioned: jpeg, png, or svg (optional, default jpeg)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "jpeg"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/episodes": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-episodes",
        "summary": "Return a picture of the episode",
        "description": "Returns a picture of the episode.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the episode",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/shows": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-shows",
        "summary": "Return a picture of the show",
        "description": "Returns a picture of the show.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the show",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "picked",
            "in": "query",
            "description": "Take the image voted on by the community (banner or show, optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/badges": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-badges",
        "summary": "Return an image of the badge (32x32)",
        "description": "Returns an image of the badge (32x32).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the badge",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the badge (optional if badge is non-tiered)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/characters": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-characters",
        "summary": "Return an image of the character",
        "description": "Returns an image of the character.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the character",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type show or movie (optional, default show)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "show"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional, default 250)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "250"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional, default 375)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "375"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/persons": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-persons",
        "summary": "Return an image of the person",
        "description": "Returns an image of the person.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the person",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional, default 250)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "250"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional, default 375)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "375"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/movies": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-movies",
        "summary": "Return an image of the movie",
        "description": "Returns an image of the movie.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the movie",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional, default 250)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "250"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional, default 375)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "375"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the poster (optional, default original)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "original"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "User's language (optional, but mandatory if language is specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/seasons": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-seasons",
        "summary": "Return an image of the show's season",
        "description": "Returns an image of the season of the show.",
        "parameters": [
          {
            "name": "show_id",
            "in": "query",
            "description": "ID of the show",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional, default 250)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "250"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional, default 375)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "375"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/pictures/platforms": {
      "get": {
        "tags": [
          "Pictures"
        ],
        "operationId": "get-pictures-platforms",
        "summary": "Return an image of the SVOD or VOD platform",
        "description": "Returns an image of the SVOD or VOD platform.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the platform",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "Desired width (optional, default 100)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "100"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "Desired height (optional, default 100)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "100"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/planning/general": {
      "get": {
        "tags": [
          "Planning"
        ],
        "operationId": "get-planning-general",
        "summary": "Display all episodes broadcasted",
        "description": "Display all episodes broadcasted in the last 8 days and up to the next 8 days.",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Origin date (YYYY-MM-DD — Optional, default \"now\")",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Number of days before (Optional, default 8)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Number of days after (Optional, default 8)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of episodes to display: \"all\" or \"premieres\" (Optional, default \"all\")",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/planning/member": {
      "get": {
        "tags": [
          "Planning"
        ],
        "operationId": "get-planning-member",
        "summary": "Display the schedule",
        "description": "Display the schedule of the identified member or another member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member's ID (Optional if identified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "unseen",
            "in": "query",
            "description": "Display only unseen episodes",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Display the schedule for the specified month (format YYYY-MM)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/planning/incoming": {
      "get": {
        "tags": [
          "Planning"
        ],
        "operationId": "get-planning-incoming",
        "summary": "Display only the first episode of the upcoming series",
        "description": "Display only the first episode of the upcoming series to be broadcasted.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/platforms/list": {
      "get": {
        "tags": [
          "Platforms"
        ],
        "operationId": "get-platforms-list",
        "summary": "Display the SVOD and VOD platforms available in the country",
        "description": "Display the SVOD and VOD platforms available in the country.",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "Country",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/platforms/services": {
      "get": {
        "tags": [
          "Platforms"
        ],
        "operationId": "get-platforms-services",
        "summary": "Display the different services a user can have",
        "description": "Display the different services a user can have.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member's ID (Optional if identified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of services (svod, vod, all) Default all",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/platforms/service": {
      "post": {
        "tags": [
          "Platforms"
        ],
        "operationId": "post-platforms-service",
        "summary": "Add the service to the user's subscriptions",
        "description": "Add the service to the user's subscriptions.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Service ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Platforms"
        ],
        "operationId": "delete-platforms-service",
        "summary": "Remove the service from the user's subscriptions",
        "description": "Remove the service from the user's subscriptions.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Service ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/polls/last": {
      "get": {
        "tags": [
          "Polls"
        ],
        "operationId": "get-polls-last",
        "summary": "Display the latest active poll",
        "description": "Display the latest active poll on BetaSeries.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/polls/poll": {
      "get": {
        "tags": [
          "Polls"
        ],
        "operationId": "get-polls-poll",
        "summary": "Display the details of a poll",
        "description": "Display the details of the poll with the given ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Poll ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/polls/target": {
      "get": {
        "tags": [
          "Polls"
        ],
        "operationId": "get-polls-target",
        "summary": "Display the latest active poll",
        "description": "Display the latest active poll regarding the target.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Target type (episode or show)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "ref_id",
            "in": "query",
            "description": "ID of the episode or series",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/polls/list": {
      "get": {
        "tags": [
          "Polls"
        ],
        "operationId": "get-polls-list",
        "summary": "Display all polls",
        "description": "Display all polls of BetaSeries.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of results per page, default 10",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "Display inactive polls (1 or 0, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/polls/answer": {
      "post": {
        "tags": [
          "Polls"
        ],
        "operationId": "post-polls-answer",
        "summary": "Send a response to a poll",
        "description": "Send a response to a poll.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Poll ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "answer",
            "in": "query",
            "description": "Answer number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/reports/report": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "post-reports-report",
        "summary": "Create a report for the element",
        "description": "Create a report for the element.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of element: character|comment|film|forum|quizz|show|suggest|suggest_film|member (Mandatory)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "target_id",
            "in": "query",
            "description": "ID of the concerned element (Mandatory)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason for the report (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Source of the report: web, app, api... (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/reports/update": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "post-reports-update",
        "summary": "Request an update for the element",
        "description": "Request an update for the element.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of element: movie|show (Mandatory)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the concerned element (Mandatory)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/search/all": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "get-search-all",
        "summary": "Return search results for all types of elements.",
        "description": "Return search results for all types of elements.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search term",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned per type (series, movies, members), default 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/shows": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "get-search-shows",
        "summary": "Return series search results with advanced filters.",
        "description": "Return series search results with advanced filters.",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Search term",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned (optional, default 20, maximum 100)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the series list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "genres",
            "in": "query",
            "description": "Genres separated by a comma (must correspond to keys returned by shows/genres)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "diffusions",
            "in": "query",
            "description": "Broadcasts separated by a comma (week, finished, ongoing, standby, inproduction, planned, pilot, canceled)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Episode duration (1-19, 20-30, 31-40, 41-50, 51-60, 61+)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "svods",
            "in": "query",
            "description": "SVoD platform IDs separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "creations",
            "in": "query",
            "description": "Years separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "pays",
            "in": "query",
            "description": "Origin countries of the series separated by a comma (must be the 2-letter country code)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "chaines",
            "in": "query",
            "description": "Broadcast channels separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "debut",
            "in": "query",
            "description": "Initial of the series returned",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tri",
            "in": "query",
            "description": "Sorting of the series (name, followed, id, rating, popularity by default, release-asc, release-desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "autres",
            "in": "query",
            "description": "Other options. Can be new for only series not followed or mine for only those followed by the user",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/movies": {
      "get": {
        "tags": [
          "Search"
        ],
        "operationId": "get-search-movies",
        "summary": "Return movie search results with advanced filters.",
        "description": "Return movie search results with advanced filters.",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Search term",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results returned (optional, default 20)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the movie list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "genres",
            "in": "query",
            "description": "Genres separated by a comma (must correspond to keys returned by movies/genres)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "diffusions",
            "in": "query",
            "description": "Broadcast types separated by a comma (none, theaters, sale)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "casting",
            "in": "query",
            "description": "Actor's name in the movies to search",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "svods",
            "in": "query",
            "description": "SVoD platform IDs separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "releases",
            "in": "query",
            "description": "Release years separated by a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "debut",
            "in": "query",
            "description": "Initial of the movies returned",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tri",
            "in": "query",
            "description": "Sorting of the movies (name, added, rating, popularity by default, release-asc, release-desc)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "autres",
            "in": "query",
            "description": "Other options. Can be new for only movies not followed, seen, unseen, or wishlist",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/seasons/watched": {
      "post": {
        "tags": [
          "Seasons"
        ],
        "operationId": "post-seasons-watched",
        "summary": "Mark all episodes of a season as watched",
        "description": "Mark all episodes of a season as watched. Skips already watched episodes.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Rating assigned from 1 to 5 (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Seasons"
        ],
        "operationId": "delete-seasons-watched",
        "summary": "Remove all episodes of a season from watched",
        "description": "Remove all episodes of a season from watched. Skips episodes not yet watched.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/seasons/hide": {
      "post": {
        "tags": [
          "Seasons"
        ],
        "operationId": "post-seasons-hide",
        "summary": "Mark all episodes of a season as hidden",
        "description": "Mark all episodes of a season as hidden. Skips already watched episodes.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Seasons"
        ],
        "operationId": "delete-seasons-hide",
        "summary": "Remove all episodes of a season from hidden",
        "description": "Remove all episodes of a season from hidden. Skips already watched episodes.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/seasons/note": {
      "post": {
        "tags": [
          "Seasons"
        ],
        "operationId": "post-seasons-note",
        "summary": "Rate a season",
        "description": "Rate a season.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of the series to rate",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Rating assigned from 1 to 5",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Seasons"
        ],
        "operationId": "delete-seasons-note",
        "summary": "Remove a rating from a season",
        "description": "Remove a rating from a season.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of the series to rate",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/note": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-note",
        "summary": "Rate a series",
        "description": "Rate a series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "note",
            "in": "query",
            "description": "Rating assigned from 1 to 5",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "operationId": "delete-shows-note",
        "summary": "Delete a series rating",
        "description": "Delete a series rating.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/search": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-search",
        "summary": "Search for a series, with member information if a token is provided",
        "description": "Search for a series, with member information if a token is provided.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Searched title",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential series info",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Return order (title|popularity|followers), default title",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "recent",
            "in": "query",
            "description": "Only series from the last two years",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "IDs of SVOD/VOD platforms where series are available",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country for SVOD/VOD platforms",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of results per page, default 5, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/display": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-display",
        "summary": "Display information about a series",
        "description": "Display information about a series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID. You can include multiple by separating them with a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB. You can include multiple by separating them with a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "imdb_id",
            "in": "query",
            "description": "Series ID on IMDB. You can include multiple by separating them with a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Series URL. (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary(default=false)",
            "in": "query",
            "description": "Return only the essential information of the series.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If `summary = true`, add some additional blocks to the return: user, notes separated by a comma (optional).",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/list": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-list",
        "summary": "Display the list of all series",
        "description": "Display the list of all series.",
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, popularity, followers (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Display only series modified since this date (UNIX timestamp — optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "recent",
            "in": "query",
            "description": "Only series from the last two years",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "starting",
            "in": "query",
            "description": "Display series starting with specified characters (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for series list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of series displayed (optional, default 100)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Display filter (optional, new=only series not in the account)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "IDs of SVOD/VOD platforms where series are available",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country for SVOD/VOD platforms",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential series info",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "broadcasted",
            "in": "query",
            "description": "Return only already broadcasted series",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/random": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-random",
        "summary": "Display a random series",
        "description": "Display a random series.",
        "parameters": [
          {
            "name": "nb",
            "in": "query",
            "description": "Number of series to display, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential series info",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/episodes": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-episodes",
        "summary": "Display episodes of a series",
        "description": "Display episodes of a series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "episode",
            "in": "query",
            "description": "Episode number (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "subtitles",
            "in": "query",
            "description": "Display subtitles if specified (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/show": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-show",
        "summary": "Add a series to the member's account",
        "description": "Add a series to the member's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID. You can include multiple by separating them with a comma (Optional if thetvdb_id or imdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB. You can include multiple by separating them with a comma (Optional if id or imdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "imdb_id",
            "in": "query",
            "description": "Series ID on IMDB. You can include multiple by separating them with a comma (Optional if id or thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "episode_id",
            "in": "query",
            "description": "ID of the last watched episode. If multiple series, the order of episodes must be exactly the same (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "operationId": "delete-shows-show",
        "summary": "Remove a series from the member's account",
        "description": "Remove a series from the member's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id or imdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id or imdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "imdb_id",
            "in": "query",
            "description": "ID of the series on IMDB (Optional if thetvdb_id or id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/archive": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-archive",
        "summary": "Archive a series in the member's account",
        "description": "Archive a series in the member's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "operationId": "delete-shows-archive",
        "summary": "Remove a series from the archives of the member's account",
        "description": "Remove a series from the archives of the member's account.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/recommendation": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-recommendation",
        "summary": "Create a series recommendation from a member to a friend",
        "description": "Create a series recommendation from a member to a friend.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Friend's member ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Comments for the friend (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "operationId": "delete-shows-recommendation",
        "summary": "Delete a sent or received series recommendation",
        "description": "Delete a sent or received series recommendation.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Recommendation ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "Shows"
        ],
        "operationId": "put-shows-recommendation",
        "summary": "Change the status of a received series recommendation",
        "description": "Change the status of a received series recommendation.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Recommendation ID",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status (accept or decline)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/recommendations": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-recommendations",
        "summary": "Retrieve recommendations received by the identified user",
        "description": "Retrieve recommendations received by the identified user.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/similars": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-similars",
        "summary": "Retrieve series marked as similar",
        "description": "Retrieve series marked as similar.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "details",
            "in": "query",
            "description": "Return series details",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/videos": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-videos",
        "summary": "Retrieve videos associated with the series",
        "description": "Retrieve videos associated with the series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: -date (add date DESC), date (add date ASC) (optional, default sort by season/episode)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for the video list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of videos to display (optional, default all)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/characters": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-characters",
        "summary": "Retrieve characters of the series",
        "description": "Retrieve characters of the series",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/pictures": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-pictures",
        "summary": "Retrieve images of the series",
        "description": "Retrieve images of the series",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: -date (date DESC), date (date ASC) (optional, default sort by id ASC)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Starting number for the image list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of images to display (optional, default all)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Image display format: hd or all (optional, default all)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/favorites": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-favorites",
        "summary": "Retrieve the favorite series of the member",
        "description": "Retrieve the favorite series of the member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member's ID, optional, if not specified uses the identified member.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, progression, remaining_time, remaining_episodes (optional, default alphabetical)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of series to display (optional, default 100, maximum 200)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the series list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter series by status: current, active, archived (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential series info",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If summary = true, add certain additional blocks to the return: user, userVisited, notes, seasons separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/favorite": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-favorite",
        "summary": "Add a favorite series to the profile of the identified member",
        "description": "Add a favorite series to the profile of the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series to add.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Shows"
        ],
        "operationId": "delete-shows-favorite",
        "summary": "Remove a favorite series from the profile of the identified member",
        "description": "Remove a favorite series from the profile of the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series to remove.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/tags": {
      "post": {
        "tags": [
          "Shows"
        ],
        "operationId": "post-shows-tags",
        "summary": "Update tags for the given series of the identified member",
        "description": "Update tags for the given series of the identified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series to tag.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Series tags: Words separated by a comma.",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/shows/member": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-member",
        "summary": "Display the list of all series of the member",
        "description": "Display the list of all series of the member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Member's ID (optional, default identified member)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify return order: alphabetical, progression, remaining_time, remaining_episodes, last_seen, last_added, rating, avg_rating, custom, next_date (optional, default alphabetical)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of series to display (optional, default 100, maximum 200)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the series list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter series by status: current, active, archived, archived_and_completed, archived_and_not_started, completed, active_and_completed, not_started, stopped (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excluded_genres",
            "in": "query",
            "description": "Exclude certain genres separated by a comma for the series return (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excluded_networks",
            "in": "query",
            "description": "Exclude certain networks separated by a comma for the series return (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excluded_status",
            "in": "query",
            "description": "Exclude certain statuses for the series return (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Retrieve series with tags separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "excluded_tags",
            "in": "query",
            "description": "Exclude series with tags separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential series info",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "includes",
            "in": "query",
            "description": "If summary = true, add certain additional blocks to the return: user, userVisited, notes, platforms, seasons separated by a comma (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "List of platform IDs where series must be available (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/discover": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-discover",
        "summary": "Display the list of series to discover",
        "description": "Display the list of series to discover.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of series to display (optional, default 100, maximum 200)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting number for the series list (optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential information",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/discover_platforms": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-discover-platforms",
        "summary": "Display the list of series to discover on major SVoD platforms",
        "description": "Display the list of series to discover on major SVoD platforms.",
        "parameters": [
          {
            "name": "summary",
            "in": "query",
            "description": "Return only essential information",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/genres": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-genres",
        "summary": "Display the list of available series genres",
        "description": "Display the list of available series genres.",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/seasons": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-seasons",
        "summary": "Display the seasons of the series",
        "description": "Display the seasons of the series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if thetvdb_id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "Series ID on TheTVDB (Optional if id specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/articles": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-articles",
        "summary": "Display blog articles that talk about the series",
        "description": "Display blog articles that talk about the series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Series ID (Optional if url specified)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Series URL. (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shows/unrated": {
      "get": {
        "tags": [
          "Shows"
        ],
        "operationId": "get-shows-unrated",
        "summary": "Retrieve the list of finished and unrated series",
        "description": "Retrieve the list of finished and unrated series.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of results per page, default 20",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number, default 1",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Time limit, month for series ended in the last 30 days, all for all finished series (Optional, default month)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/subtitles/last": {
      "get": {
        "tags": [
          "Subtitles"
        ],
        "operationId": "get-subtitles-last",
        "summary": "Display the latest subtitles retrieved by BetaSeries",
        "description": "Displays the latest subtitles retrieved by BetaSeries.",
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "Number of subtitles, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Display only certain languages: all|vovf|vo|vf (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/subtitles/show": {
      "get": {
        "tags": [
          "Subtitles"
        ],
        "operationId": "get-subtitles-show",
        "summary": "Display subtitles for a given show",
        "description": "Displays subtitles for a given show.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the show",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Display only certain languages: all|vovf|vo|vf (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/subtitles/episode": {
      "get": {
        "tags": [
          "Subtitles"
        ],
        "operationId": "get-subtitles-episode",
        "summary": "Display subtitles for a given episode",
        "description": "Displays subtitles for a given episode.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the episode",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Display only certain languages: all|vovf|vo|vf (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/subtitles/season": {
      "get": {
        "tags": [
          "Subtitles"
        ],
        "operationId": "get-subtitles-season",
        "summary": "Display subtitles for a season or all seasons",
        "description": "Displays subtitles for a specific season or all seasons.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season number or 'all' to retrieve packages for all seasons (Optional, default is all)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "all"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Display only certain languages: all|vovf|vo|vf (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/subtitles/report": {
      "post": {
        "tags": [
          "Subtitles"
        ],
        "operationId": "post-subtitles-report",
        "summary": "Reports subtitles as incorrect to be removed from the list.",
        "description": "Reports subtitles as incorrect to be removed from the list.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the subtitle",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Reason why the subtitle is incorrect",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/tags/list": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "get-tags-list",
        "summary": "Display all tags created by the connected member",
        "description": "Displays all the tags created by the connected member.",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of media for the tags to display (show or movie, default is show)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "show"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/tags/tag": {
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "post-tags-tag",
        "summary": "Add a tag (or several) for the show (or movie) for the connected member",
        "description": "Adds a tag (or several) for the show (or the movie) for the connected member.",
        "parameters": [
          {
            "name": "show_id",
            "in": "query",
            "description": "ID of the show",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "movie_id",
            "in": "query",
            "description": "ID of the movie",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Label of the tag to create. You can add several by separating them with a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "delete-tags-tag",
        "summary": "Remove a tag for the show (or movie) for the connected member",
        "description": "Removes a tag for the show (or the movie) for the connected member.",
        "parameters": [
          {
            "name": "show_id",
            "in": "query",
            "description": "ID of the show",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "movie_id",
            "in": "query",
            "description": "ID of the movie",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "tag",
            "in": "query",
            "description": "Label of the tag to remove. You can specify several by separating them with a comma",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/timeline/home": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-home",
        "summary": "Display the latest events on the site",
        "description": "Displays the latest events on the site.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of events per page, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since_id",
            "in": "query",
            "description": "ID of the last event received to get previous ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "last_id",
            "in": "query",
            "description": "ID of the last event received to get subsequent ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of events to return, separated by a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/timeline/feed": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-feed",
        "summary": "Display the latest events of the friends of the identified member",
        "description": "Displays the latest events of the friends of the identified member.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of events per page, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (Optional, default 1)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of events to return, separated by a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/timeline/friends": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-friends",
        "summary": "Display the latest events of the friends of the identified member",
        "description": "Displays the latest events of the friends of the identified member.",
        "parameters": [
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of events per page, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since_id",
            "in": "query",
            "description": "ID of the last event received to get previous ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "last_id",
            "in": "query",
            "description": "ID of the last event received to get subsequent ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of events to return, separated by a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "self",
            "in": "query",
            "description": "Include events of the identified member (Optional, default 0)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "0"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    },
    "/timeline/member": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-member",
        "summary": "Display the latest events of the specified member",
        "description": "Displays the latest events of the specified member.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the member",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of events per page, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since_id",
            "in": "query",
            "description": "ID of the last event received to get previous ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "last_id",
            "in": "query",
            "description": "ID of the last event received to get subsequent ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of events to return, separated by a comma (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/timeline/event": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-event",
        "summary": "Display a particular event",
        "description": "Displays a particular event.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the event",
            "required": true,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/timeline/show": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "operationId": "get-timeline-show",
        "summary": "Display the latest events of the connected member about the specified show",
        "description": "Displays the latest events of the connected member on the specified series.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the series (Optional if thetvdb_id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "thetvdb_id",
            "in": "query",
            "description": "ID of the series on TheTVDB (Optional if id provided)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "nbpp",
            "in": "query",
            "description": "Number of events per page, maximum 100",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "since_id",
            "in": "query",
            "description": "ID of the last event received to get previous ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "last_id",
            "in": "query",
            "description": "ID of the last event received to get subsequent ones (Optional)",
            "required": false,
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale parameter to specify language preference",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "security": [
          {
            "BetaSeriesApiKey": [],
            "BetaSeriesToken": []
          }
        ]
      }
    }
  }
}