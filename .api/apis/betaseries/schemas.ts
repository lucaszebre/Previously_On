const DeleteCollectionsCollection = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the collection"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const DeleteCommentsComment = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const DeleteCommentsSubscription = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of item: episode|show|member|movie"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the item in question"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteCommentsThumb = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const DeleteEpisodesDownloaded = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteEpisodesHidden = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Identifier of the episode to remove. Multiple IDs can be separated by a comma"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteEpisodesNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteEpisodesWatched = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteFriendsBlock = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID to unblock"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteFriendsFriend = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID to remove"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMembersAvatar = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMembersBanner = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMembersNotification = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Notification ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMessagesMessage = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the message to delete â€” if it's the first in a discussion, the whole discussion is deleted"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMoviesFavorite = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the movie to remove."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMoviesMovie = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteMoviesNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeletePlatformsService = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteProfileFiltersFilter = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of media (show or movie)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteSeasonsHide = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteSeasonsNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season of the series to rate"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteSeasonsWatched = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteShowsArchive = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteShowsFavorite = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series to remove."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteShowsNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteShowsRecommendation = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Recommendation ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteShowsShow = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id or imdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id or imdb_id specified)"},"imdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on IMDB (Optional if thetvdb_id or id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const DeleteTagsTag = {"metadata":{"allOf":[{"type":"object","properties":{"show_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the show"},"movie_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the movie"},"tag":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Label of the tag to remove. You can specify several by separating them with a comma"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetBadgesBadge = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Badge ID. You can add more than one by separating them with a comma."},"userId":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the user who earned the badge(s)."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetCollectionsCollection = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the collection to retrieve."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetCollectionsList = {"metadata":{"allOf":[{"type":"object","properties":{"user_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (optional, default identified member)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetCommentsComment = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetCommentsComments = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Element type: episode|show|member|movie|poll|article"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the element in question"},"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of comments per page"},"since_id":{"type":"string","default":"null","$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last comment received (Optional)"},"order":{"type":"string","default":"asc","$schema":"http://json-schema.org/draft-04/schema#","description":"Chronological return order, desc or asc (Default asc)"},"replies":{"type":"string","default":"true","$schema":"http://json-schema.org/draft-04/schema#","description":"Include replies to comments (1 or 0, default 1)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["nbpp"]}]}} as const
;
const GetCommentsReplies = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment"},"order":{"type":"string","default":"asc","$schema":"http://json-schema.org/draft-04/schema#","description":"Chronological return order, desc or asc (Default asc)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetCommentsStatus = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of item: episode|show|member|movie"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the item in question"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesDisplay = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID. Multiple IDs can be specified separated by a comma (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB. Multiple IDs can be specified separated by a comma (Optional if id provided)"},"youtube_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on YouTube. Multiple IDs can be specified separated by a comma (Optional if id provided)"},"subtitles":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display subtitles if specified (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesLatest = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID. Multiple IDs can be separated by a comma (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB. Multiple IDs can be separated by a comma (Optional if id provided)"},"specials":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Include special episodes (default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesList = {"metadata":{"allOf":[{"type":"object","properties":{"subtitles":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display episodes with specific subtitles available: all|vovf|vo|vf (Optional)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit to a number of episodes per series (Optional)"},"showsLimit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit to a number of series (Optional, default 50)"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number for series pagination (Optional, default 1)"},"showId":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional)"},"showTheTVDBId":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional)"},"showIMDBId":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on IMDB (Optional)"},"userId":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (Optional, default identified member)"},"specials":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Include special episodes in the return (Optional, default not returned)"},"released":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If 1, displays only released episodes, 2 for upcoming, 0 for both (Optional, default 1)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Order of episode appearance, \"account\" for account order, \"smart\" for current viewing order (Optional, default account)"},"since":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Timestamp to mark episodes released after this date (Optional)"},"excludes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, removes certain blocks from the return: characters (Optional)"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"List of platform IDs where the episodes must be available (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesNext = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID. Multiple IDs can be separated by a comma (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB. Multiple IDs can be separated by a comma (Optional if id provided)"},"specials":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Include special episodes (default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesScraper = {"metadata":{"allOf":[{"type":"object","properties":{"file":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"File name to process"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesSearch = {"metadata":{"allOf":[{"type":"object","properties":{"show_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID for the episode to search"},"url":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"URL of the series to search (Optional)"},"number":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode number, either SxxExx or the global number"},"subtitles":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, returns subtitles for episodes"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetEpisodesUnrated = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results per page, default 20"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"date":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Time limit, yesterday for episodes watched yesterday, all for all watched episodes (Optional, default yesterday)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetFriendsList = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID, optional, if not specified uses the identified member. If specified, blocked=false."},"blocked":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, returns the list of blocked people"},"summary":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Returns the last action of friends (Default false)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit on the number of friends to display (optional, default all friends are returned)"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetFriendsRequests = {"metadata":{"allOf":[{"type":"object","properties":{"received":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, returns the list of received requests"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersBadges = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersEmail = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersInfos = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID (optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersIsActive = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersNotifications = {"metadata":{"allOf":[{"type":"object","properties":{"since_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Last ID (Optional)"},"number":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of notifications, maximum 100 (Optional, default 10)"},"sort":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Descending or ascending sort (ASC or DESC, default DESC)"},"types":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return only certain types separated by a comma (Optional)"},"all":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display all notifications, not just unread ones (Optional, default false)"},"auto_delete":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Automatic deletion of notifications (Optional, default false)"},"auto_mark":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Automatic marking of notifications as seen (Optional, default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersOptions = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersSearch = {"metadata":{"allOf":[{"type":"object","properties":{"login":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Username, minimum 2 characters. You can use % as a wildcard."},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results to return. Default 10."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersUsername = {"metadata":{"allOf":[{"type":"object","properties":{"username":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Username"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMembersYear = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID (optional)"},"year":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Year for the statistics calculation"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMessagesDiscussion = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the first message of the discussion"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMessagesInbox = {"metadata":{"allOf":[{"type":"object","properties":{"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesArticles = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesCharacters = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesDiscover = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of discovery: popular, upcoming"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit on the number of movies to display (optional, default 100, maximum 200)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the movie list (optional, default 0)"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Add some additional blocks to the return: platforms separated by a comma (optional)."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesFavorites = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID, optional, if not specified uses the identified member."},"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the movie list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit on the number of movies to display (maximum 1000) (optional)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, popularity, added, release, svod (optional, default alphabetical)"},"summary":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential movie info (Default false)"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If summary = true, add certain additional blocks to the return: user, notes, platforms separated by a comma (optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesGenres = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesList = {"metadata":{"allOf":[{"type":"object","properties":{"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the movie list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit of movies to display (optional, default 100, max 1000)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, popularity (optional)"},"filter":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display filter (optional, new=only movies not in the account)"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"IDs of platforms where movies are available"},"country":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Country for platforms"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesMember = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (optional, default identified member)"},"state":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"0 = to watch, 1 = watched, 2 = do not want to watch (default 0)"},"released":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"0 = unreleased movies, 1 = released movies, 2 = all (default 2)"},"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the movie list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit of movies to display (maximum 1000) (optional)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, popularity, added, release, svod (optional, default alphabetical)"},"summary":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential movie info (Default false)"},"tags":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve movies with tags separated by a comma (optional)"},"excluded_tags":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Exclude movies with tags separated by a comma (optional)"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If summary = true, add certain additional blocks to the return: user, notes, platforms separated by a comma (optional)"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"List of platform IDs where the movies must be available (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesMovie = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"tmdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID on TheMovieDB"},"imdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID on IMDB"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If `summary = true`, add some additional blocks to the return: user, notes, platforms separated by a comma (optional)."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesRandom = {"metadata":{"allOf":[{"type":"object","properties":{"nb":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of movies to display, default 1"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesScraper = {"metadata":{"allOf":[{"type":"object","properties":{"file":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"File name to process"},"number":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results to return (default 1)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesSearch = {"metadata":{"allOf":[{"type":"object","properties":{"title":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Searched title (optional if order=popularity)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return order (title|popularity), default title"},"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results per page, default 5, maximum 100"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"recent":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Only movies from the last two years (Default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesSimilars = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"details":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return movie details (Default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetMoviesUpcoming = {"metadata":{"allOf":[{"type":"object","properties":{"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of movies (Optional, default 25)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return order: release_date, popularity (Optional, default release_date)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetNewsLast = {"metadata":{"allOf":[{"type":"object","properties":{"number":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of news, default 10"},"tailored":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return news from series followed by the member"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPersonsArticles = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Person's ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPersonsPerson = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Person's ID."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPicturesBadges = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the badge"},"level":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Level of the badge (optional if badge is non-tiered)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesCharacters = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the character"},"type":{"type":"string","default":"show","$schema":"http://json-schema.org/draft-04/schema#","description":"Type show or movie (optional, default show)"},"width":{"type":"string","default":"250","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional, default 250)"},"height":{"type":"string","default":"375","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional, default 375)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesEpisodes = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the episode"},"width":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional)"},"height":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesMembers = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the member"},"width":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional)"},"height":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional)"},"placeholder":{"type":"string","default":"jpeg","$schema":"http://json-schema.org/draft-04/schema#","description":"Type of format if no photo is mentioned: jpeg, png, or svg (optional, default jpeg)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesMovies = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the movie"},"width":{"type":"string","default":"250","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional, default 250)"},"height":{"type":"string","default":"375","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional, default 375)"},"language":{"type":"string","default":"original","$schema":"http://json-schema.org/draft-04/schema#","description":"Language for the poster (optional, default original)"},"locale":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"User's language (optional, but mandatory if language is specified)"}},"required":["id"]}]}} as const
;
const GetPicturesPersons = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the person"},"width":{"type":"string","default":"250","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional, default 250)"},"height":{"type":"string","default":"375","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional, default 375)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesPlatforms = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the platform"},"width":{"type":"string","default":"100","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional, default 100)"},"height":{"type":"string","default":"100","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional, default 100)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPicturesSeasons = {"metadata":{"allOf":[{"type":"object","properties":{"show_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the show"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number"},"width":{"type":"string","default":"250","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional, default 250)"},"height":{"type":"string","default":"375","$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional, default 375)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["show_id","season"]}]}} as const
;
const GetPicturesShows = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the show"},"width":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired width (optional)"},"height":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Desired height (optional)"},"picked":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Take the image voted on by the community (banner or show, optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetPlanningGeneral = {"metadata":{"allOf":[{"type":"object","properties":{"date":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Origin date (YYYY-MM-DD â€” Optional, default \"now\")"},"before":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of days before (Optional, default 8)"},"after":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of days after (Optional, default 8)"},"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of episodes to display: \"all\" or \"premieres\" (Optional, default \"all\")"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPlanningIncoming = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPlanningMember = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (Optional if identified)"},"unseen":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only unseen episodes"},"month":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display the schedule for the specified month (format YYYY-MM)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPlatformsList = {"metadata":{"allOf":[{"type":"object","properties":{"country":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Country"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPlatformsServices = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (Optional if identified)"},"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of services (svod, vod, all) Default all"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPollsLast = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPollsList = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results per page, default 10"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"inactive":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display inactive polls (1 or 0, default 0)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPollsPoll = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Poll ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetPollsTarget = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Target type (episode or show)"},"ref_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the episode or series"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetSearchAll = {"metadata":{"allOf":[{"type":"object","properties":{"query":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Search term"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results returned per type (series, movies, members), default 5."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetSearchMovies = {"metadata":{"allOf":[{"type":"object","properties":{"text":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Search term"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results returned (optional, default 20)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the movie list (optional, default 0)"},"genres":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Genres separated by a comma (must correspond to keys returned by movies/genres)"},"diffusions":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Broadcast types separated by a comma (none, theaters, sale)"},"casting":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Actor's name in the movies to search"},"svods":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"SVoD platform IDs separated by a comma"},"releases":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Release years separated by a comma"},"debut":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Initial of the movies returned"},"tri":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Sorting of the movies (name, added, rating, popularity by default, release-asc, release-desc)"},"autres":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Other options. Can be new for only movies not followed, seen, unseen, or wishlist"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetSearchShows = {"metadata":{"allOf":[{"type":"object","properties":{"text":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Search term"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results returned (optional, default 20, maximum 100)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the series list (optional, default 0)"},"genres":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Genres separated by a comma (must correspond to keys returned by shows/genres)"},"diffusions":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Broadcasts separated by a comma (week, finished, ongoing, standby, inproduction, planned, pilot, canceled)"},"duration":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode duration (1-19, 20-30, 31-40, 41-50, 51-60, 61+)"},"svods":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"SVoD platform IDs separated by a comma"},"creations":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Years separated by a comma"},"pays":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Origin countries of the series separated by a comma (must be the 2-letter country code)"},"chaines":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Broadcast channels separated by a comma"},"debut":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Initial of the series returned"},"tri":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Sorting of the series (name, followed, id, rating, popularity by default, release-asc, release-desc)"},"autres":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Other options. Can be new for only series not followed or mine for only those followed by the user"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsArticles = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if url specified)"},"url":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series URL. (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsCharacters = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsDiscover = {"metadata":{"allOf":[{"type":"object","properties":{"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit the number of series to display (optional, default 100, maximum 200)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the series list (optional, default 0)"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential information"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsDiscoverPlatforms = {"metadata":{"allOf":[{"type":"object","properties":{"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential information"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsDisplay = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID. You can include multiple by separating them with a comma (Optional)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB. You can include multiple by separating them with a comma (Optional)"},"imdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on IMDB. You can include multiple by separating them with a comma (Optional)"},"url":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series URL. (Optional)"},"summary(default=false)":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return only the essential information of the series."},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If `summary = true`, add some additional blocks to the return: user, notes separated by a comma (optional)."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsEpisodes = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number (Optional)"},"episode":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode number (Optional)"},"subtitles":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display subtitles if specified (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsFavorites = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID, optional, if not specified uses the identified member."},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, progression, remaining_time, remaining_episodes (optional, default alphabetical)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit the number of series to display (optional, default 100, maximum 200)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the series list (optional, default 0)"},"status":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter series by status: current, active, archived (optional)"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential series info"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If summary = true, add certain additional blocks to the return: user, userVisited, notes, seasons separated by a comma (optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsGenres = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsList = {"metadata":{"allOf":[{"type":"object","properties":{"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, popularity, followers (optional)"},"since":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only series modified since this date (UNIX timestamp â€” optional)"},"recent":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Only series from the last two years"},"starting":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display series starting with specified characters (optional)"},"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for series list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit number of series displayed (optional, default 100)"},"filter":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display filter (optional, new=only series not in the account)"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"IDs of SVOD/VOD platforms where series are available"},"country":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Country for SVOD/VOD platforms"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential series info"},"broadcasted":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only already broadcasted series"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsMember = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member's ID (optional, default identified member)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: alphabetical, progression, remaining_time, remaining_episodes, last_seen, last_added, rating, avg_rating, custom, next_date (optional, default alphabetical)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit the number of series to display (optional, default 100, maximum 200)"},"offset":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the series list (optional, default 0)"},"status":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter series by status: current, active, archived, archived_and_completed, archived_and_not_started, completed, active_and_completed, not_started, stopped (optional)"},"excluded_genres":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Exclude certain genres separated by a comma for the series return (optional)"},"excluded_networks":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Exclude certain networks separated by a comma for the series return (optional)"},"excluded_status":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Exclude certain statuses for the series return (optional)"},"tags":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve series with tags separated by a comma (optional)"},"excluded_tags":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Exclude series with tags separated by a comma (optional)"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential series info"},"includes":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If summary = true, add certain additional blocks to the return: user, userVisited, notes, platforms, seasons separated by a comma (optional)"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"List of platform IDs where series must be available (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsPictures = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: -date (date DESC), date (date ASC) (optional, default sort by id ASC)"},"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the image list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit the number of images to display (optional, default all)"},"format":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Image display format: hd or all (optional, default all)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsRandom = {"metadata":{"allOf":[{"type":"object","properties":{"nb":{"type":"string","default":"1","$schema":"http://json-schema.org/draft-04/schema#","description":"Number of series to display, default 1"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential series info"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsRecommendations = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsSearch = {"metadata":{"allOf":[{"type":"object","properties":{"title":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Searched title"},"summary":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return only essential series info"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Return order (title|popularity|followers), default title"},"recent":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Only series from the last two years"},"platforms":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"IDs of SVOD/VOD platforms where series are available"},"country":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Country for SVOD/VOD platforms"},"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results per page, default 5, maximum 100"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsSeasons = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsSimilars = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"details":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Return series details"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsUnrated = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of results per page, default 20"},"page":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number, default 1"},"date":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Time limit, month for series ended in the last 30 days, all for all finished series (Optional, default month)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetShowsVideos = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"order":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specify return order: -date (add date DESC), date (add date ASC) (optional, default sort by season/episode)"},"start":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Starting number for the video list (optional, default 0)"},"limit":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Limit the number of videos to display (optional, default all)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetSubtitlesEpisode = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the episode"},"language":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only certain languages: all|vovf|vo|vf (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetSubtitlesLast = {"metadata":{"allOf":[{"type":"object","properties":{"number":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of subtitles, maximum 100"},"language":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only certain languages: all|vovf|vo|vf (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetSubtitlesSeason = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series"},"season":{"type":"string","default":"all","$schema":"http://json-schema.org/draft-04/schema#","description":"Season number or 'all' to retrieve packages for all seasons (Optional, default is all)"},"language":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only certain languages: all|vovf|vo|vf (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetSubtitlesShow = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the show"},"language":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display only certain languages: all|vovf|vo|vf (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetTagsList = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":"show","$schema":"http://json-schema.org/draft-04/schema#","description":"Type of media for the tags to display (show or movie, default is show)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetTimelineEvent = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the event"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetTimelineFeed = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of events per page, maximum 100"},"page":{"type":"string","default":"1","$schema":"http://json-schema.org/draft-04/schema#","description":"Page number (Optional, default 1)"},"types":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Types of events to return, separated by a comma (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetTimelineFriends = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of events per page, maximum 100"},"since_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get previous ones (Optional)"},"last_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get subsequent ones (Optional)"},"types":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Types of events to return, separated by a comma (Optional)"},"self":{"type":"string","default":"0","$schema":"http://json-schema.org/draft-04/schema#","description":"Include events of the identified member (Optional, default 0)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetTimelineHome = {"metadata":{"allOf":[{"type":"object","properties":{"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of events per page, maximum 100"},"since_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get previous ones (Optional)"},"last_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get subsequent ones (Optional)"},"types":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Types of events to return, separated by a comma (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const GetTimelineMember = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the member"},"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of events per page, maximum 100"},"since_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get previous ones (Optional)"},"last_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get subsequent ones (Optional)"},"types":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Types of events to return, separated by a comma (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const GetTimelineShow = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id provided)"},"nbpp":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Number of events per page, maximum 100"},"since_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get previous ones (Optional)"},"last_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last event received to get subsequent ones (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostCollectionsCollection = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the collection to update (Mandatory for updating)"},"name":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Name of the collection (Mandatory for creation)"},"description":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Description of the collection (Optional)"},"private":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Indicates if the collection if private (Optional, possibles values : '1' (for private) or '0' (for public, default value when creation))"},"items":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"List of shows/movies for the collection (Mandatory for creation, Optional for edition. Must be a JSON array with format : [{\"type\": \"show\", \"id\": 123, \"note\": \"Note about series\"}, {\"type\": \"movie\", \"id\": 456, \"note\": null}])"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostCommentsComment = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of item: episode|show|member|movie|event|poll|article (Mandatory for creation, or reference)"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the item in question (Mandatory for creation, or reference)"},"reference":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Reference ID of the item in question (Mandatory for creation, or type + id)"},"in_reply_to":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If a reply, inner_id of the corresponding comment (Optional for creation)"},"text":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Text of the comment"},"edit_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment to edit (Mandatory for editing)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["type","id","reference"]}]}} as const
;
const PostCommentsCommentEvent = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of the event: film_add|markas.... (Optional if id provided)"},"element_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the element involved in the event (Optional if id provided)"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the event to comment on (Optional if type + element_id provided)"},"text":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Text of the comment"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostCommentsSubscription = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of item: episode|show|member|movie"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the item in question"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostCommentsThumb = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the comment"},"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of the vote (-1 for a downvote, 1 for an upvote)"},"switch":{"type":"string","default":"false","$schema":"http://json-schema.org/draft-04/schema#","description":"Whether the user switches their existing vote (default false)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id","type"]}]}} as const
;
const PostEpisodesDownloaded = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostEpisodesHidden = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Identifier of the episode to mark. Multiple IDs can be separated by a comma"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostEpisodesNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Rating from 1 to 5"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostEpisodesWatched = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID (Optional if thetvdb_id provided)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on TheTVDB (Optional if id provided)"},"youtube_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Episode ID on YouTube (Optional if id provided)"},"bulk":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, all previous episodes will also be marked as watched (default true)"},"delete":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If specified, all subsequent episodes will no longer be marked as watched"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"If a rating between 1 and 5 is specified, rate the episode"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostFriendsBlock = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID to block"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostFriendsFriend = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Member ID to add as a friend"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersAccessToken = {"metadata":{"allOf":[{"type":"object","properties":{"client_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Your API key."},"client_secret":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The secret key provided in your key information."},"redirect_uri":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The callback address you had already provided for the first part."},"code":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Code obtained from the first part of authentication."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersAuth = {"metadata":{"allOf":[{"type":"object","properties":{"login":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Identifier (login or e-mail)"},"password":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"MD5 encrypted password"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersAvatar = {"metadata":{"allOf":[{"type":"object","properties":{"avatar":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Image to be used for the user's avatar."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersBanner = {"metadata":{"allOf":[{"type":"object","properties":{"avatar":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Image to be used for the user's banner."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersDelete = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersDestroy = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersEmail = {"metadata":{"allOf":[{"type":"object","properties":{"email":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The new email address"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersLocale = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Locale"}},"required":[]}]}} as const
;
const PostMembersLost = {"metadata":{"allOf":[{"type":"object","properties":{"find":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Email address or username"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersOauth = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersOption = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Option name (downloaded, global, specials, notation, timelag, friendship, comment_language)"},"value":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Option value (1 or 0, for friendship: open|requests|friends|nobody, for episodes_tri: name, date, empty, for comment_language: all, site_locale and locale available on Betaseries)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersPassword = {"metadata":{"allOf":[{"type":"object","properties":{"current_password":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The current password of the member"},"new_password":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The new password for the member"},"confirmed_password":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The confirmation of the new password for the member"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersSignup = {"metadata":{"allOf":[{"type":"object","properties":{"login":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Username"},"password":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"MD5 password â€” Optional: If not provided, it will be generated and sent in the email"},"email":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Email address"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMembersSync = {"metadata":{"allOf":[{"type":"object","properties":{"mails[]":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"POST array of email addresses to search"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMessagesMessage = {"metadata":{"allOf":[{"type":"object","properties":{"to":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the recipient member (mandatory if first message)"},"text":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Text of the message"},"title":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Title of the message (mandatory if first message)"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the first message in the discussion (optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMessagesRead = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the message to mark as read"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMoviesFavorite = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the movie to add."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMoviesMovie = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"mail":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Enable email alerts (0 or 1, default 1)"},"twitter":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Enable Twitter alerts (0 or 1, default 1)"},"state":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"0 = to watch, 1 = watched, 2 = do not want to watch (default 0)"},"profile":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Display on profile (0 or 1, default 1)"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie rating (optional, from 1 to 5)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostMoviesNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Movie ID"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Rating from 1 to 5"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostOauthAccessToken = {"metadata":{"allOf":[{"type":"object","properties":{"client_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Your API key."},"client_secret":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The secret key provided in your key's details."},"redirect_uri":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"The callback address you had previously specified for the first part."},"code":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Code obtained by the first part of the authentication."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostOauthDevice = {"metadata":{"allOf":[{"type":"object","properties":{"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostPlatformsService = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Service ID"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostPollsAnswer = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Poll ID"},"answer":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Answer number"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostReportsReport = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of element: character|comment|film|forum|quizz|show|suggest|suggest_film|member (Mandatory)"},"target_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the concerned element (Mandatory)"},"reason":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Reason for the report (Optional)"},"source":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Source of the report: web, app, api... (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostReportsUpdate = {"metadata":{"allOf":[{"type":"object","properties":{"type":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Type of element: movie|show (Mandatory)"},"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the concerned element (Mandatory)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostSeasonsHide = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostSeasonsNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season of the series to rate"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Rating assigned from 1 to 5"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostSeasonsWatched = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB (Optional if id specified)"},"season":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Season number"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Rating assigned from 1 to 5 (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostShowsArchive = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostShowsFavorite = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series to add."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostShowsNote = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"note":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Rating assigned from 1 to 5"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["note"]}]}} as const
;
const PostShowsRecommendation = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series (Optional if thetvdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series on TheTVDB (Optional if id specified)"},"to":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Friend's member ID"},"comments":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Comments for the friend (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostShowsShow = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID. You can include multiple by separating them with a comma (Optional if thetvdb_id or imdb_id specified)"},"thetvdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on TheTVDB. You can include multiple by separating them with a comma (Optional if id or imdb_id specified)"},"imdb_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series ID on IMDB. You can include multiple by separating them with a comma (Optional if id or thetvdb_id specified)"},"episode_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the last watched episode. If multiple series, the order of episodes must be exactly the same (Optional)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostShowsTags = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the series to tag."},"tags":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Series tags: Words separated by a comma."},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PostSubtitlesReport = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the subtitle"},"reason":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Reason why the subtitle is incorrect"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":["id"]}]}} as const
;
const PostTagsTag = {"metadata":{"allOf":[{"type":"object","properties":{"show_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the show"},"movie_id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"ID of the movie"},"tag":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Label of the tag to create. You can add several by separating them with a comma"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
const PutShowsRecommendation = {"metadata":{"allOf":[{"type":"object","properties":{"id":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Recommendation ID"},"status":{"type":"string","default":null,"$schema":"http://json-schema.org/draft-04/schema#","description":"Status (accept or decline)"},"locale":{"type":"string","default":"fr","$schema":"http://json-schema.org/draft-04/schema#","description":"Locale parameter to specify language preference"}},"required":[]}]}} as const
;
export { DeleteCollectionsCollection, DeleteCommentsComment, DeleteCommentsSubscription, DeleteCommentsThumb, DeleteEpisodesDownloaded, DeleteEpisodesHidden, DeleteEpisodesNote, DeleteEpisodesWatched, DeleteFriendsBlock, DeleteFriendsFriend, DeleteMembersAvatar, DeleteMembersBanner, DeleteMembersNotification, DeleteMessagesMessage, DeleteMoviesFavorite, DeleteMoviesMovie, DeleteMoviesNote, DeletePlatformsService, DeleteProfileFiltersFilter, DeleteSeasonsHide, DeleteSeasonsNote, DeleteSeasonsWatched, DeleteShowsArchive, DeleteShowsFavorite, DeleteShowsNote, DeleteShowsRecommendation, DeleteShowsShow, DeleteTagsTag, GetBadgesBadge, GetCollectionsCollection, GetCollectionsList, GetCommentsComment, GetCommentsComments, GetCommentsReplies, GetCommentsStatus, GetEpisodesDisplay, GetEpisodesLatest, GetEpisodesList, GetEpisodesNext, GetEpisodesScraper, GetEpisodesSearch, GetEpisodesUnrated, GetFriendsList, GetFriendsRequests, GetMembersBadges, GetMembersEmail, GetMembersInfos, GetMembersIsActive, GetMembersNotifications, GetMembersOptions, GetMembersSearch, GetMembersUsername, GetMembersYear, GetMessagesDiscussion, GetMessagesInbox, GetMoviesArticles, GetMoviesCharacters, GetMoviesDiscover, GetMoviesFavorites, GetMoviesGenres, GetMoviesList, GetMoviesMember, GetMoviesMovie, GetMoviesRandom, GetMoviesScraper, GetMoviesSearch, GetMoviesSimilars, GetMoviesUpcoming, GetNewsLast, GetPersonsArticles, GetPersonsPerson, GetPicturesBadges, GetPicturesCharacters, GetPicturesEpisodes, GetPicturesMembers, GetPicturesMovies, GetPicturesPersons, GetPicturesPlatforms, GetPicturesSeasons, GetPicturesShows, GetPlanningGeneral, GetPlanningIncoming, GetPlanningMember, GetPlatformsList, GetPlatformsServices, GetPollsLast, GetPollsList, GetPollsPoll, GetPollsTarget, GetSearchAll, GetSearchMovies, GetSearchShows, GetShowsArticles, GetShowsCharacters, GetShowsDiscover, GetShowsDiscoverPlatforms, GetShowsDisplay, GetShowsEpisodes, GetShowsFavorites, GetShowsGenres, GetShowsList, GetShowsMember, GetShowsPictures, GetShowsRandom, GetShowsRecommendations, GetShowsSearch, GetShowsSeasons, GetShowsSimilars, GetShowsUnrated, GetShowsVideos, GetSubtitlesEpisode, GetSubtitlesLast, GetSubtitlesSeason, GetSubtitlesShow, GetTagsList, GetTimelineEvent, GetTimelineFeed, GetTimelineFriends, GetTimelineHome, GetTimelineMember, GetTimelineShow, PostCollectionsCollection, PostCommentsComment, PostCommentsCommentEvent, PostCommentsSubscription, PostCommentsThumb, PostEpisodesDownloaded, PostEpisodesHidden, PostEpisodesNote, PostEpisodesWatched, PostFriendsBlock, PostFriendsFriend, PostMembersAccessToken, PostMembersAuth, PostMembersAvatar, PostMembersBanner, PostMembersDelete, PostMembersDestroy, PostMembersEmail, PostMembersLocale, PostMembersLost, PostMembersOauth, PostMembersOption, PostMembersPassword, PostMembersSignup, PostMembersSync, PostMessagesMessage, PostMessagesRead, PostMoviesFavorite, PostMoviesMovie, PostMoviesNote, PostOauthAccessToken, PostOauthDevice, PostPlatformsService, PostPollsAnswer, PostReportsReport, PostReportsUpdate, PostSeasonsHide, PostSeasonsNote, PostSeasonsWatched, PostShowsArchive, PostShowsFavorite, PostShowsNote, PostShowsRecommendation, PostShowsShow, PostShowsTags, PostSubtitlesReport, PostTagsTag, PutShowsRecommendation }
